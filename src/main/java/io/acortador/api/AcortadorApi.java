/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.13).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.acortador.api;

import com.fasterxml.jackson.databind.ObjectMapper;
import io.acortador.model.Body;
import io.acortador.model.InlineResponse200;
import io.acortador.model.InlineResponse201;
import io.swagger.annotations.*;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import javax.servlet.http.HttpServletRequest;
import javax.validation.Valid;
import javax.validation.constraints.Size;
import java.io.IOException;
import java.util.Optional;

@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2020-05-06T17:21:42.001Z")

@Api(value = "acortador", description = "the acortador API")
@RequestMapping(value = "/v2")
public interface AcortadorApi {

    Logger log = LoggerFactory.getLogger(ProxyApi.class);

    default Optional<ObjectMapper> getObjectMapper() {
        return Optional.empty();
    }

    default Optional<HttpServletRequest> getRequest() {
        return Optional.empty();
    }

    default Optional<String> getAcceptHeader() {
        return getRequest().map(r -> r.getHeader("Accept"));
    }

    @ApiOperation(value = "este es un ejemplo!", nickname = "alargador", notes = "", response = InlineResponse200.class, tags={ "url", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "ok", response = InlineResponse200.class),
        @ApiResponse(code = 400, message = "Invalid ID supplied") })
    @RequestMapping(value = "/alargador",
        produces = { "application/json" }, 
        consumes = { "application/json" },
       // method = RequestMethod.GET)
        method = RequestMethod.POST)
    ResponseEntity<InlineResponse200> alargador(@Size(max=128) @ApiParam(value = "develve full url",required=true) @RequestBody Body body); //@PathVariable("someurl") String someurl) ;



    @ApiOperation(value = "este es un ejemplo!", nickname = "ejemplo", notes = "", response = InlineResponse201.class, tags={ "url", })
    @ApiResponses(value = {
            @ApiResponse(code = 201, message = "creado", response = InlineResponse201.class),
            @ApiResponse(code = 400, message = "Invalid request") })
    @RequestMapping(value = "/acortador",
            produces = { "application/json" },
            consumes = { "application/json" },
            method = RequestMethod.POST)
    ResponseEntity<InlineResponse201> ejemplo(@ApiParam(value = "Genera unaurl acortada" ,required=true )  @Valid @RequestBody Body body);

    @ApiOperation(value = "bloquea una url", nickname = "locked", notes = "", response = InlineResponse201.class, tags={ "url", })
    @ApiResponses(value = {
            @ApiResponse(code = 200, message = "creado"),
            @ApiResponse(code = 400, message = "Invalid request") })
    @RequestMapping(value = "/url",
            produces = { "application/json" },
            consumes = { "application/json" },
            method = RequestMethod.DELETE)
    ResponseEntity<String> locked(@ApiParam(value = "bloquea una url" ,required=true )  @Valid @RequestBody Body body);


}
