/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.13).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.acortador.api;

import com.fasterxml.jackson.databind.ObjectMapper;
import io.acortador.model.Urls;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiResponse;
import io.swagger.annotations.ApiResponses;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import java.util.Optional;

@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2020-05-06T17:21:42.001Z")

@Api(value = "proxy", description = "the proxy API")
@RequestMapping(value = "/v2")
public interface ProxyApi {

    Logger log = LoggerFactory.getLogger(ProxyApi.class);

    default Optional<ObjectMapper> getObjectMapper() {
        return Optional.empty();
    }

    default Optional<HttpServletRequest> getRequest() {
        return Optional.empty();
    }

    default Optional<String> getAcceptHeader() {
        return getRequest().map(r -> r.getHeader("Accept"));
    }

    @ApiOperation(value = "retorna configuracion del proxy", nickname = "proxy", notes = "este servicio devuelve el archivo para configurar el proxy", tags={ "proxy", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "ok") })
    @RequestMapping(value = "/proxy",
        produces = { "text/plain" }, 
        method = RequestMethod.GET)
     ResponseEntity<?> proxy();

}
